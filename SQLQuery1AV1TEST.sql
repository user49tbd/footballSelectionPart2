CREATE DATABASE AVPT2
GO
USE AVPT2
GO
CREATE TABLE TIMES
(
CODIGOTIME	INT			NOT NULL,
NOMETIME	VARCHAR(50)	NOT NULL,
CIDADE		VARCHAR(50)	NOT NULL,
ESTADIO		VARCHAR(50)	NOT NULL,
MATERIALE	VARCHAR(50)	NOT NULL
PRIMARY KEY (CODIGOTIME)
)
GO
CREATE TABLE GRUPO
(
GRP			CHAR(01)	NOT NULL,
TIMECOD		INT			NOT NULL
PRIMARY KEY (GRP,TIMECOD)
FOREIGN KEY (TIMECOD)
			REFERENCES TIMES (CODIGOTIME)
)
GO
CREATE TABLE JOGOS
(
CODIGOTIMEA	INT			NOT NULL,
CODIGOTIMEB	INT			NOT NULL,
GOLSTIMEA	INT			NOT NULL,
GOLSTIMEB	INT			NOT NULL,
DATA		DATE		NOT NULL
)
GO
ALTER TABLE JOGOS
ADD CONSTRAINT CON1 PRIMARY KEY(CODIGOTIMEA,CODIGOTIMEB)
GO
CREATE TABLE PRO_GRPR
(
NUMRAND		INT			NOT NULL,
TIMEN		VARCHAR(50) NOT NULL,
GRP			CHAR(01)	NOT NULL,
INDEXGRP	INT			NOT NULL
PRIMARY KEY (NUMRAND)
)
GO
CREATE TABLE GRUPOSNOME
(
ID			INT			NOT NULL,
NOME		CHAR(01)	NOT NULL
PRIMARY KEY (ID)
)
GO
CREATE TABLE MATCHES
(
ID		INT			NOT NULL,
RDS		VARCHAR(20) NOT NULL
PRIMARY KEY (ID)
)
GO
INSERT INTO MATCHES
VALUES
(1,'ADBC'),
(2,'BDAC'),
(3,'CDAB')
GO
INSERT INTO GRUPOSNOME
VALUES
(1,'A'),
(2,'B'),
(3,'C'),
(4,'D')
GO
INSERT INTO TIMES
VALUES
(1,'AGUA SANTA','DIADEMA','DISTRITAL DO INAMAR','KARLIU'),
(2,'BOTAFOGO-SP','RIBEIRAO PRETO','SANTA CRUZ','VOLT SPORT'),
(3,'CORINTHIAS','SAO PAULO','NEO QUIMICA ARENA','NIKE'),
(4,'FERROVIARIA','ARARAQUARA','FONTE LUMINOSA','LUPO'),
(5,'GUARANI','CAMPINAS','BRINCO DE OURO','KAPPA'),
(6,'INTER DE LIMEIRA','LIMEIRA','LIMEIRAO','ALLURI SPORTS'),
(7,'ITUANO','ITU','NOVELLI JUNIOR','KANZA'),
(8,'MIRASSOL','MIRASSOL','JOSE MARIA DE CAMPOS MAIA','SUPER BOLLA'),
(9,'NOVORIZONTINO','NOVO HORIZONTE','JORGE ISMAEL DE BIASI','PHYSICUS'),
(10,'PALMEIRAS','SAO PAULO','ALLIANZ PARQUE','PUMA'),
(11,'PONTE PRETA','CAMPINAS','MOISES LUCARELLI','1900'),
(12,'RED BULL BRAGANTINO','BRAGANCA PAULISTA','NABI ABI CHEDID','NIKE'),
(13,'SANTO ANDRE','SANTO ANDRE','BRUNO JOSE DANIEL','ICONE SPORTS'),
(14,'SANTOS','SANTOS','VILA BELMIRO','UMBRO'),
(15,'SAO BERNARDO','SAO BERNARDO DO CAMPO','PRIMEIRO DE MAIO','MAGNUM GROUP'),
(16,'SAO PAULO','SAO PAULO','MORUMBI','ADIDAS')
GO
CREATE PROCEDURE SP_INSERTEAM @RAND INT,@TEAM VARCHAR(50),@GROUP CHAR(01),@IX INT
AS
	INSERT INTO PRO_GRPR
	VALUES
	(@RAND,@TEAM,@GROUP,@IX)
	INSERT INTO GRUPO
	VALUES
	(@GROUP,(SELECT T.CODIGOTIME FROM TIMES T WHERE T.NOMETIME = @TEAM))
GO
CREATE PROCEDURE PRO11
AS
	DECLARE @I			INT,
			@RNUM		INT,
			@GRPINDEX	INT,
			@GNOME		CHAR(01),
			@GITEMINDEX	INT,
			@TIMENOME	VARCHAR(50)
	SET @I = 1
	SET @RNUM = 0
	SET @TIMENOME = ''
	SET @GRPINDEX = 1
	SET @GNOME = ''
	SET @GITEMINDEX =1
	WHILE (@I <= 16)
	BEGIN
		SET @RNUM = (RAND()*16)+1
		SET @TIMENOME = (SELECT T.NOMETIME FROM TIMES T WHERE T.CODIGOTIME = @RNUM)
		SET @GNOME = (SELECT GP.NOME FROM GRUPOSNOME GP WHERE GP.ID = @GRPINDEX)
		IF((@I%4)!= 0)
		BEGIN
			--(SELECT T.NOMETIME FROM TIMES T WHERE T.CODIGOTIME = @RNUM)
			--Coritnthians, Palmeiras, Santos e São Paulo
			IF(@TIMENOME NOT LIKE '%CORINTHIAS%' AND @TIMENOME NOT LIKE '%PALMEIRAS%'AND @TIMENOME NOT LIKE '%SANTOS%' AND
			@TIMENOME NOT LIKE '%SAO PAULO%')
			BEGIN
				--(SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.TIMEN = @TIMENOME)
				IF ((SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.TIMEN = @TIMENOME) IS NULL)
				BEGIN
					EXEC SP_INSERTEAM @RNUM,@TIMENOME,@GNOME,@GITEMINDEX
					SET @I = @I + 1
					SET @GITEMINDEX = @GITEMINDEX + 1
				END
			END
		END
		ELSE
		BEGIN
			IF(@TIMENOME LIKE '%CORINTHIAS%' OR @TIMENOME LIKE '%PALMEIRAS%' OR @TIMENOME LIKE '%SANTOS%' OR
			@TIMENOME LIKE '%SAO PAULO%')
			BEGIN
				IF ((SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.TIMEN = @TIMENOME) IS NULL)
				BEGIN
					--(SELECT GP.NOME FROM GRUPOSNOME GP WHERE GP.ID = @GRPINDEX)
					--INSERT INTO PRO_GRPR VALUES (@RNUM,@TIMENOME,@GNOME,@GRPINDEX)
					EXEC SP_INSERTEAM @RNUM,@TIMENOME,@GNOME,@GITEMINDEX
					SET @GRPINDEX = @GRPINDEX + 1
					SET @I = @I + 1
					SET @GITEMINDEX = 1
				END
			END
		END
	END
--------------------------------------------------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE RODADASJOGO
AS
	DECLARE @GRPRODADA INT,
			@GRPPARTIDA INT,
			@GRPPARTIDA2 INT,
			@TEAM1		VARCHAR(50),
			@TEAM2		VARCHAR(50),
			@TEAMMATCH  VARCHAR(20),
			@IJOGO		INT,
			@VIC		INT,
			@GOLS1		INT,
			@DIAS		DATE,
			@DIASEMANA  INT,
			@CORE		INT,
			@GOLS2		INT,
			@RODADAS	INT

	SET @GRPRODADA = 1
	SET @GRPPARTIDA2 = 1
	SET @GRPPARTIDA = 1
	SET @TEAMMATCH = ''
	SET @IJOGO = 1
	-----------------
	SET @VIC = 0
	-----------------
	SET @GOLS1 = 0
	SET @GOLS2 = 0
	SET @DIAS = GETDATE()
	SET @DIASEMANA = DATEPART(WEEKDAY,@DIAS)
	SET @CORE = 0
	--SET @RODADAS = 1
	WHILE (@GRPRODADA <= 3)
	BEGIN
		SET @TEAMMATCH = (SELECT M.RDS FROM MATCHES M WHERE M.ID = @GRPRODADA)
		WHILE (@GRPPARTIDA2<=4)
		BEGIN
--------------------------------------------------------------------------------------------------------------------------------------------------
			WHILE (@DIASEMANA != 1 AND @DIASEMANA != 4)
			BEGIN
				--SET @DIAS = CONVERT(VARCHAR(11),DATEADD(DAY,1,@DIAS))
				--PRINT(CONVERT(VARCHAR(11),@DIAS))
				--PRINT(@DIASEMANA)
				SET @DIAS = DATEADD(DAY,1,@DIAS)
				SET @DIASEMANA = DATEPART(WEEKDAY,@DIAS)
			END
			--PRINT('OK')
			WHILE (@GRPPARTIDA<=4)
			BEGIN
				WHILE(@IJOGO <= 3)
				BEGIN
					SET @TEAM1 = (SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.GRP = SUBSTRING(@TEAMMATCH,@IJOGO,1) 
					AND PG.INDEXGRP = @GRPPARTIDA)

					IF(@VIC+@GRPPARTIDA >= 5)
					BEGIN
						SET @TEAM2 = (SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.GRP = SUBSTRING(@TEAMMATCH,(@IJOGO+1),1) 
						AND PG.INDEXGRP = (@GRPPARTIDA+@VIC)-4)
					END
					ELSE
					BEGIN
						SET @TEAM2 = (SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.GRP = SUBSTRING(@TEAMMATCH,(@IJOGO+1),1) 
						AND PG.INDEXGRP = @GRPPARTIDA+@VIC)
					END
					------------
					SET @GOLS1 = (RAND()*4)
					SET @GOLS2 = (RAND()*4)
					--PRINT(@TEAM1)
					--PRINT(@TEAM2)
					INSERT INTO JOGOS
					VALUES
					((SELECT T.CODIGOTIME FROM TIMES T WHERE T.NOMETIME = @TEAM1),
					(SELECT T.CODIGOTIME FROM TIMES T WHERE T.NOMETIME = @TEAM2),
					@GOLS1,@GOLS2,@DIAS
					)
					------------
					SET @IJOGO = @IJOGO + 2
				END
				SET @IJOGO = 1
				SET @GRPPARTIDA = @GRPPARTIDA+1
				--SET @RODADAS = @RODADAS + 1
			END
		--SET @DIAS = CONVERT(VARCHAR(11),DATEADD(DAY,1,@DIAS))
		--PRINT(@DIAS)
		SET @DIAS = DATEADD(DAY,1,@DIAS)
		SET @DIASEMANA = DATEPART(WEEKDAY,@DIAS)
--------------------------------------------------------------------------------------------------------------------------------------------------
		-------------------------
		PRINT(@VIC)
		SET @VIC = @VIC+1
		--------------------------
		SET @GRPPARTIDA = 1
		SET @GRPPARTIDA2 = @GRPPARTIDA2+1
		END
		--------------------------
		SET @VIC = 0
		--------------------------
		SET @GRPPARTIDA2 = 1
		SET @GRPRODADA = @GRPRODADA+1
	END
GO
--C
--------------------------------------------------------------------------------------------------------------------------
CREATE FUNCTION F_VITORIAS (@GRP CHAR(01), @INDEX INT)
RETURNS INT
AS
BEGIN
	DECLARE @TOTV INT
	SET @TOTV = (
	SELECT COUNT(J.DATA) FROM JOGOS J INNER JOIN TIMES TA ON
	TA.CODIGOTIME = J.CODIGOTIMEA INNER JOIN TIMES TB
	ON TB.CODIGOTIME = J.CODIGOTIMEB INNER JOIN PRO_GRPR PGA ON
	PGA.TIMEN = TA.NOMETIME INNER JOIN PRO_GRPR PGB ON
	PGB.TIMEN = TB.NOMETIME
	WHERE 
	(PGB.GRP = @GRP AND PGB.INDEXGRP = @INDEX AND J.GOLSTIMEB > J.GOLSTIMEA)
	OR 
	(PGA.GRP = @GRP AND PGA.INDEXGRP = @INDEX AND J.GOLSTIMEA > J.GOLSTIMEB))
	RETURN @TOTV
END
GO
CREATE FUNCTION F_DERROTAS (@GRP CHAR(01), @INDEX INT)
RETURNS INT
AS
BEGIN
	DECLARE @TOTD INT
	SET @TOTD = (
	SELECT COUNT(J.DATA) FROM JOGOS J INNER JOIN TIMES TA ON
	TA.CODIGOTIME = J.CODIGOTIMEA INNER JOIN TIMES TB
	ON TB.CODIGOTIME = J.CODIGOTIMEB INNER JOIN PRO_GRPR PGA ON
	PGA.TIMEN = TA.NOMETIME INNER JOIN PRO_GRPR PGB ON
	PGB.TIMEN = TB.NOMETIME
	WHERE 
	(PGB.GRP = @GRP AND PGB.INDEXGRP = @INDEX AND J.GOLSTIMEB < J.GOLSTIMEA)
	OR 
	(PGA.GRP = @GRP AND PGA.INDEXGRP = @INDEX AND J.GOLSTIMEA < J.GOLSTIMEB))
	RETURN @TOTD
END
GO
CREATE FUNCTION F_EMPATES (@GRP CHAR(01), @INDEX INT)
RETURNS INT
AS
BEGIN
	DECLARE @TOTE INT
	SET @TOTE = (
	SELECT COUNT(J.DATA) FROM JOGOS J INNER JOIN TIMES TA ON
	TA.CODIGOTIME = J.CODIGOTIMEA INNER JOIN TIMES TB
	ON TB.CODIGOTIME = J.CODIGOTIMEB INNER JOIN PRO_GRPR PGA ON
	PGA.TIMEN = TA.NOMETIME INNER JOIN PRO_GRPR PGB ON
	PGB.TIMEN = TB.NOMETIME
	WHERE 
	(PGB.GRP = @GRP AND PGB.INDEXGRP = @INDEX AND J.GOLSTIMEB = J.GOLSTIMEA)
	OR 
	(PGA.GRP = @GRP AND PGA.INDEXGRP = @INDEX AND J.GOLSTIMEA = J.GOLSTIMEB))
	RETURN @TOTE
END
GO
CREATE FUNCTION F_GOLSM (@GRP CHAR(01), @INDEX INT)
RETURNS INT
AS
BEGIN
	DECLARE @V1 INT,
			@V2 INT,
			@TOTG INT
	SET @V1 = 0
	SET @V2 =0
	SET @TOTG = 0
	SET @V1 = (
	SELECT SUM(J.GOLSTIMEA) AS GOLS_MARCADOS FROM PRO_GRPR P INNER JOIN TIMES T ON
	T.NOMETIME = P.TIMEN INNER JOIN JOGOS J ON J.CODIGOTIMEA = T.CODIGOTIME
	WHERE P.GRP = @GRP AND P.INDEXGRP = @INDEX)
	SET @V2 = (
	SELECT SUM(J.GOLSTIMEB) AS GOLS_MARCADOS FROM PRO_GRPR P INNER JOIN TIMES T ON
	T.NOMETIME = P.TIMEN INNER JOIN JOGOS J ON J.CODIGOTIMEB = T.CODIGOTIME
	WHERE P.GRP = @GRP AND P.INDEXGRP = @INDEX)
	IF(@V2 IS NULL)
	BEGIN
		SET @V2 =0
	END
	IF(@V1 IS NULL)
	BEGIN
		SET @V1 =0
	END
	SET @TOTG = @V1 + @V2
	RETURN @TOTG
END
GO
CREATE FUNCTION F_GOLSR (@GRP CHAR(01), @INDEX INT)
RETURNS INT
AS
BEGIN
	DECLARE @V1 INT,
			@V2 INT,
			@TOTG INT
	SET @V1 = (
	SELECT SUM(J.GOLSTIMEB) FROM JOGOS J INNER JOIN TIMES T
	ON T.CODIGOTIME = J.CODIGOTIMEA INNER JOIN 
	PRO_GRPR PG ON PG.TIMEN = T.NOMETIME
	WHERE PG.GRP = @GRP AND PG.INDEXGRP = @INDEX)
	SET @V2 = (
	SELECT SUM(J.GOLSTIMEA) FROM JOGOS J INNER JOIN TIMES T
	ON T.CODIGOTIME = J.CODIGOTIMEB INNER JOIN 
	PRO_GRPR PG ON PG.TIMEN = T.NOMETIME
	WHERE PG.GRP = @GRP AND PG.INDEXGRP = @INDEX)
	IF(@V2 IS NULL)
	BEGIN
		SET @V2 =0
	END
	IF(@V1 IS NULL)
	BEGIN
		SET @V1 =0
	END
	SET @TOTG = @V1 + @V2
	RETURN @TOTG
END
GO
---------------------------------------------------------------------------------------------------------------------------
CREATE FUNCTION TABGRUPO ()
RETURNS @TAB TABLE (
NOME_TIME				VARCHAR(50),			
NUM_JOGOS_DISPUTADOS	INT,
VITORIAS				INT,
EMPATES					INT,
DERROTAS				INT,
GOLS_MARCADOS			INT,
GOLS_SOFRIDOS			INT,
SALDO_GOLS				INT,
PONTOS					INT
)
AS
BEGIN
	DECLARE @I INT,
			@I1 INT,
			@GRP CHAR(01)
	SET @I = 1
	SET @I1 = 1

	WHILE(@I1 <= 4)
	BEGIN
		SET @GRP = (SELECT GN.NOME FROM GRUPOSNOME GN WHERE GN.ID = @I1)
		INSERT INTO @TAB (NOME_TIME) SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.GRP = @GRP
		WHILE(@I <= 4)
		BEGIN
			UPDATE @TAB
				SET
				VITORIAS = dbo.F_VITORIAS (@GRP,@I),
				EMPATES	= dbo.F_EMPATES (@GRP,@I),
				DERROTAS = dbo.F_DERROTAS (@GRP,@I),
				GOLS_MARCADOS = dbo.F_GOLSM (@GRP,@I),
				GOLS_SOFRIDOS = dbo.F_GOLSR (@GRP,@I)

			WHERE NOME_TIME = (SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.INDEXGRP = @I AND PG.GRP = @GRP)
			UPDATE @TAB

				SET NUM_JOGOS_DISPUTADOS = (VITORIAS + EMPATES + DERROTAS),
				SALDO_GOLS = GOLS_MARCADOS - GOLS_SOFRIDOS, 
				PONTOS = (VITORIAS*3)+EMPATES

			WHERE NOME_TIME = (SELECT PG.TIMEN FROM PRO_GRPR PG WHERE PG.INDEXGRP = @I AND PG.GRP = @GRP)
			SET @I = @I + 1
		END
	SET @I = 1
	SET @I1 = @I1 + 1
	END
	RETURN
END
GO
CREATE TABLE GRPSTATUS
(
GRP			CHAR(01)	NOT NULL,
OTIME		INT			NULL,
INDEXT		INT			NOT NULL,
TIMESTATUS	VARCHAR(30) NOT NULL,
TIMECODIGO  INT			NOT NULL
PRIMARY KEY (GRP,INDEXT)
)
GO
CREATE PROCEDURE STATUS_GRUPO
AS
	BEGIN
		DELETE GRPSTATUS
		DECLARE @I INT,
		@I1 INT,
		@GRP CHAR(01)
		SET @I = 1
		SET @I1 = 1

		WHILE(@I1 <= 4)
		BEGIN
			SET @GRP = (SELECT GN.NOME FROM GRUPOSNOME GN WHERE GN.ID = @I1)
			INSERT INTO GRPSTATUS (GRP,INDEXT,OTIME,TIMESTATUS,TIMECODIGO) SELECT PG.GRP,PG.INDEXGRP, 
				ROW_NUMBER() OVER(ORDER BY T.PONTOS DESC,T.VITORIAS DESC, T.GOLS_MARCADOS DESC, T.SALDO_GOLS DESC),
				'-',TM.CODIGOTIME
				FROM TABGRUPO () T INNER JOIN PRO_GRPR PG ON
				PG.TIMEN = T.NOME_TIME INNER JOIN TIMES TM ON TM.NOMETIME = PG.TIMEN
				WHERE PG.GRP = @GRP
				ORDER BY T.PONTOS DESC,T.VITORIAS DESC, T.GOLS_MARCADOS DESC, T.SALDO_GOLS DESC
				UPDATE GRPSTATUS
				SET TIMESTATUS = 'C'
				WHERE GRPSTATUS.OTIME = 1 AND GRPSTATUS.GRP = @GRP
			SET @I1 = @I1 + 1
		END
		UPDATE GRPSTATUS
		SET TIMESTATUS = 'R'
		WHERE GRPSTATUS.TIMECODIGO IN (
		
		SELECT TOP 2 TT.CODIGOTIME
		--,T.PONTOS,T.VITORIAS, T.GOLS_MARCADOS, T.SALDO_GOLS 
		FROM TABGRUPO () T INNER JOIN TIMES TT
		ON TT.NOMETIME = T.NOME_TIME
		ORDER BY T.PONTOS ASC,T.VITORIAS ASC, T.GOLS_MARCADOS ASC, T.SALDO_GOLS ASC
		)
	END
GO
CREATE FUNCTION F_FINAL_PROJ ()
RETURNS @TAB TABLE (
NTIMEA VARCHAR(50)	NOT NULL,
NTIMEB VARCHAR(50)	NOT NULL
)
AS
BEGIN
	DECLARE @I INT,
			@NOMETA VARCHAR(50),
			@NOMETB VARCHAR(50)
	SET @I = 1
	WHILE(@I <= 4)
	BEGIN
		SET @NOMETA = (SELECT T.NOMETIME FROM GRPSTATUS GS INNER JOIN TIMES T ON
		T.CODIGOTIME = GS.TIMECODIGO INNER JOIN GRUPOSNOME GRPN ON 
		GRPN.NOME = GS.GRP
		WHERE GRPN.ID = @I AND GS.OTIME = 1)
		SET @NOMETB = (SELECT T.NOMETIME FROM GRPSTATUS GS INNER JOIN TIMES T ON
		T.CODIGOTIME = GS.TIMECODIGO INNER JOIN GRUPOSNOME GRPN ON 
		GRPN.NOME = GS.GRP
		WHERE GRPN.ID = @I AND GS.OTIME = 2)
		INSERT INTO @TAB VALUES (@NOMETA,@NOMETB)
		SET @I = @I + 1
	END
	RETURN
END
GO
----------------------------------------------------------------------------------------------------------------------------
CREATE TRIGGER T_IUDTIMES ON TIMES
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	ROLLBACK TRANSACTION
	RAISERROR('NAO E PERMITIDO INSERT, UPDATE E DELETE NA TABELA TIMES',16,1)
END
GO
CREATE TRIGGER T_IUDGRUPO ON GRUPO
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	ROLLBACK TRANSACTION
	RAISERROR('NAO E PERMITIDO INSERT, UPDATE E DELETE NA TABELA GRUPO',16,1)
END
GO
CREATE TRIGGER T_IDJOGOS ON JOGOS
AFTER INSERT, DELETE
AS
BEGIN
	ROLLBACK TRANSACTION
	RAISERROR('NAO E PERMITIDO INSERT DELETE NA TABELO JOGOS',16,1)
END
GO
----------------------------------------------------------------------------------------------------------------------------
CREATE FUNCTION F_GRUPOS_DADOS_STATUS (@GRP CHAR(01))
RETURNS @TAB TABLE (
NOME_TIME				VARCHAR(50),			
NUM_JOGOS_DISPUTADOS	INT,
VITORIAS				INT,
EMPATES					INT,
DERROTAS				INT,
GOLS_MARCADOS			INT,
GOLS_SOFRIDOS			INT,
SALDO_GOLS				INT,
PONTOS					INT,
GRP						CHAR(01),
OTIME					INT,
TIMESTATUS				VARCHAR(30)
)
AS
BEGIN
	IF(@GRP = 'T')
	BEGIN
		INSERT INTO @TAB (NOME_TIME,NUM_JOGOS_DISPUTADOS,VITORIAS,EMPATES,DERROTAS,GOLS_MARCADOS,GOLS_SOFRIDOS,
		SALDO_GOLS,PONTOS,GRP,OTIME,TIMESTATUS) 
		SELECT T.NOME_TIME,T.NUM_JOGOS_DISPUTADOS,T.VITORIAS,T.EMPATES,T.DERROTAS,T.GOLS_MARCADOS,T.GOLS_SOFRIDOS,
		T.SALDO_GOLS,T.PONTOS,GS.GRP,GS.OTIME,GS.TIMESTATUS
		FROM TABGRUPO () T INNER JOIN TIMES TM ON
		TM.NOMETIME = T.NOME_TIME INNER JOIN GRPSTATUS GS ON
		GS.TIMECODIGO = TM.CODIGOTIME
	END
	ELSE
	BEGIN
		INSERT INTO @TAB (NOME_TIME,NUM_JOGOS_DISPUTADOS,VITORIAS,EMPATES,DERROTAS,GOLS_MARCADOS,GOLS_SOFRIDOS,
		SALDO_GOLS,PONTOS,GRP,OTIME,TIMESTATUS) 
		SELECT T.NOME_TIME,T.NUM_JOGOS_DISPUTADOS,T.VITORIAS,T.EMPATES,T.DERROTAS,T.GOLS_MARCADOS,T.GOLS_SOFRIDOS,
		T.SALDO_GOLS,T.PONTOS,GS.GRP,GS.OTIME,GS.TIMESTATUS
		FROM TABGRUPO () T INNER JOIN TIMES TM ON
		TM.NOMETIME = T.NOME_TIME INNER JOIN GRPSTATUS GS ON
		GS.TIMECODIGO = TM.CODIGOTIME
		WHERE GS.GRP = @GRP
		ORDER BY GS.OTIME
	END
	RETURN
END
GO
GO
CREATE TABLE VALS (
INDEXT INT NULL,
VALUET VARCHAR(50) NULL
)
GO
CREATE TABLE PTSTATUS (
TID1	VARCHAR(01) NULL,
T1NOME	VARCHAR(50) NULL,
T1GOLS	INT NULL,
TID2	VARCHAR(01) NULL,
T2NOME	VARCHAR(50) NULL,
T2GOLS	INT NULL
)
GO
CREATE 
PROCEDURE P_PARTIDA (@TIMENOME VARCHAR(50), @DATA DATE)
AS
BEGIN
	DECLARE @I INT,
			@LV VARCHAR(80),
			@LIMITI INT,
			@LIMITF INT,
			@OLIMIT INT,
			@VSEG VARCHAR(50)
	SET @OLIMIT = 1
	SET @LIMITI = @OLIMIT
	--SET @LIMITF = @LIMITI
	SET @I = 1
	SET @LV = (SELECT 
				CASE
				WHEN (TA.NOMETIME != @TIMENOME)THEN
				'B'+'*'+TB.NOMETIME+'*'+CAST(J.GOLSTIMEB AS VARCHAR(10))+'*'+
				'A'+'*'+TA.NOMETIME+'*'+CAST(J.GOLSTIMEA AS VARCHAR(10))+'*'
				WHEN (TB.NOMETIME != @TIMENOME)THEN
				'A'+'*'+TA.NOMETIME+'*'+CAST(J.GOLSTIMEA AS VARCHAR(10))+'*'+
				'B'+'*'+TB.NOMETIME+'*'+CAST(J.GOLSTIMEB AS VARCHAR(10))+'*'
				END
				FROM TIMES TA INNER JOIN JOGOS J ON
				TA.CODIGOTIME = J.CODIGOTIMEA INNER JOIN TIMES TB ON
				TB.CODIGOTIME = J.CODIGOTIMEB
				WHERE (TA.NOMETIME = @TIMENOME OR TB.NOMETIME = @TIMENOME) AND J.DATA = @DATA)
	WHILE(@I <= 6)
	BEGIN
		WHILE(SUBSTRING(@LV,@LIMITI,1) NOT LIKE '*')
		BEGIN
			SET @LIMITI = @LIMITI+1
		END
		SET @VSEG = SUBSTRING(@LV,@OLIMIT,(@LIMITI-@OLIMIT))
		INSERT INTO VALS VALUES (@I,@VSEG)
		SET @LIMITI = @LIMITI+1
		SET @OLIMIT = @LIMITI
		SET @LIMITI = @OLIMIT
		SET @I = @I + 1
	END
	INSERT INTO PTSTATUS (TID1) SELECT V.VALUET FROM VALS V WHERE V.INDEXT = 1
	UPDATE PTSTATUS
	SET
		T1NOME = (SELECT V.VALUET FROM VALS V WHERE V.INDEXT = 2),
		T1GOLS = (SELECT CAST(V.VALUET AS INT) FROM VALS V WHERE V.INDEXT = 3),
		TID2   = (SELECT V.VALUET FROM VALS V WHERE V.INDEXT = 4),
		T2NOME = (SELECT V.VALUET FROM VALS V WHERE V.INDEXT = 5),
		T2GOLS = (SELECT CAST(V.VALUET AS INT) FROM VALS V WHERE V.INDEXT = 6)
	DELETE FROM VALS
END
GO
CREATE PROCEDURE P_UPDJOGOS(@GOLSA INT, @GOLSB INT,@NOMETA VARCHAR(50),@NOMETB VARCHAR(50),@DATA DATE)
AS
BEGIN
	UPDATE JOGOS
	SET GOLSTIMEA = @GOLSA, GOLSTIMEB = @GOLSB
	WHERE (CODIGOTIMEA IN (
	SELECT TA.CODIGOTIME FROM JOGOS J INNER JOIN TIMES TA ON
	J.CODIGOTIMEA = TA.CODIGOTIME INNER JOIN TIMES TB ON
	TB.CODIGOTIME = J.CODIGOTIMEB
	WHERE TA.NOMETIME = @NOMETA AND J.DATA = @DATA
	)
	AND
	CODIGOTIMEB IN (
	SELECT TB.CODIGOTIME FROM JOGOS J INNER JOIN TIMES TA ON
	J.CODIGOTIMEA = TA.CODIGOTIME INNER JOIN TIMES TB ON
	TB.CODIGOTIME = J.CODIGOTIMEB
	WHERE TB.NOMETIME = @NOMETB AND J.DATA = @DATA
	))
	AND DATA = @DATA
	EXEC STATUS_GRUPO
END
GO
CREATE PROCEDURE INITIAL
AS
BEGIN
	
	EXEC ('DISABLE TRIGGER T_IUDTIMES ON TIMES')
	EXEC ('DISABLE TRIGGER T_IUDGRUPO ON GRUPO')
	EXEC ('DISABLE TRIGGER T_IDJOGOS ON JOGOS')

	DELETE FROM GRPSTATUS
	DELETE FROM JOGOS
	DELETE FROM GRUPO
	DELETE FROM PRO_GRPR
	EXEC PRO11
	EXEC RODADASJOGO
	EXEC STATUS_GRUPO

	EXEC ('ENABLE TRIGGER T_IUDTIMES ON TIMES')
	EXEC ('ENABLE TRIGGER T_IUDGRUPO ON GRUPO')
	EXEC ('ENABLE TRIGGER T_IDJOGOS ON JOGOS')
END
---------------------------------------------------------------------------------------------------------------------------
GO
EXEC INITIAL
GO
USE MASTER 
GO
DROP DATABASE AVPT2